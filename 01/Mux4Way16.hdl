// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux4Way16.hdl

/**
 * 4-way 16-bit multiplexor:
 * out = a if sel == 00
 *       b if sel == 01
 *       c if sel == 10
 *       d if sel == 11
 */

CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];

    PARTS:
    Mux (a=a[0], b=c[0], sel=sel[1], out=r00);
    Mux (a=b[0], b=d[0], sel=sel[1], out=r01);
    Mux (a=r00, b=r01, sel=sel[0], out=out[0]);

    Mux (a=a[1], b=c[1], sel=sel[1], out=r10);
    Mux (a=b[1], b=d[1], sel=sel[1], out=r11);
    Mux (a=r10, b=r11, sel=sel[0], out=out[1]);

    Mux (a=a[2], b=c[2], sel=sel[1], out=r20);
    Mux (a=b[2], b=d[2], sel=sel[1], out=r21);
    Mux (a=r20, b=r21, sel=sel[0], out=out[2]);

    Mux (a=a[3], b=c[3], sel=sel[1], out=r30);
    Mux (a=b[3], b=d[3], sel=sel[1], out=r31);
    Mux (a=r30, b=r31, sel=sel[0], out=out[3]);

    Mux (a=a[4], b=c[4], sel=sel[1], out=r40);
    Mux (a=b[4], b=d[4], sel=sel[1], out=r41);
    Mux (a=r40, b=r41, sel=sel[0], out=out[4]);

    Mux (a=a[5], b=c[5], sel=sel[1], out=r50);
    Mux (a=b[5], b=d[5], sel=sel[1], out=r51);
    Mux (a=r50, b=r51, sel=sel[0], out=out[5]);

    Mux (a=a[6], b=c[6], sel=sel[1], out=r60);
    Mux (a=b[6], b=d[6], sel=sel[1], out=r61);
    Mux (a=r60, b=r61, sel=sel[0], out=out[6]);

    Mux (a=a[7], b=c[7], sel=sel[1], out=r70);
    Mux (a=b[7], b=d[7], sel=sel[1], out=r71);
    Mux (a=r70, b=r71, sel=sel[0], out=out[7]);

    Mux (a=a[8], b=c[8], sel=sel[1], out=r80);
    Mux (a=b[8], b=d[8], sel=sel[1], out=r81);
    Mux (a=r80, b=r81, sel=sel[0], out=out[8]);

    Mux (a=a[9], b=c[9], sel=sel[1], out=r90);
    Mux (a=b[9], b=d[9], sel=sel[1], out=r91);
    Mux (a=r90, b=r91, sel=sel[0], out=out[9]);

    Mux (a=a[10], b=c[10], sel=sel[1], out=r100);
    Mux (a=b[10], b=d[10], sel=sel[1], out=r101);
    Mux (a=r100, b=r101, sel=sel[0], out=out[10]);

    Mux (a=a[11], b=c[11], sel=sel[1], out=r110);
    Mux (a=b[11], b=d[11], sel=sel[1], out=r111);
    Mux (a=r110, b=r111, sel=sel[0], out=out[11]);

    Mux (a=a[12], b=c[12], sel=sel[1], out=r120);
    Mux (a=b[12], b=d[12], sel=sel[1], out=r121);
    Mux (a=r120, b=r121, sel=sel[0], out=out[12]);

    Mux (a=a[13], b=c[13], sel=sel[1], out=r130);
    Mux (a=b[13], b=d[13], sel=sel[1], out=r131);
    Mux (a=r130, b=r131, sel=sel[0], out=out[13]);

    Mux (a=a[14], b=c[14], sel=sel[1], out=r140);
    Mux (a=b[14], b=d[14], sel=sel[1], out=r141);
    Mux (a=r140, b=r141, sel=sel[0], out=out[14]);

    Mux (a=a[15], b=c[15], sel=sel[1], out=r150);
    Mux (a=b[15], b=d[15], sel=sel[1], out=r151);
    Mux (a=r150, b=r151, sel=sel[0], out=out[15]);
}
